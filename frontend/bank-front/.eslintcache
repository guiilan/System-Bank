[{"D:\\system-bank\\frontend\\bank-front\\src\\index.js":"1","D:\\system-bank\\frontend\\bank-front\\src\\routes\\routes.js":"2","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\RegisterPage\\index.js":"3","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\TransferPix\\index.js":"4","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\HomePage\\index.js":"5","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\RegisterKeyPix\\index.js":"6","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\LoginPage\\index.js":"7","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\HomePageClient\\index.js":"8","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\Transfer\\index.js":"9","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\Sacar\\index.js":"10","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\RegisterBank\\index.js":"11","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\HomePageAdmin\\index.js":"12","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\HomePageClient\\styles.js":"13","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\RegisterPage\\styles.js":"14","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\LoginPage\\Styles.js":"15","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\RegisterBank\\styles.js":"16","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\TransferPix\\styles.js":"17","D:\\system-bank\\frontend\\bank-front\\src\\Services\\api.js":"18","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\RegisterKeyPix\\styles.js":"19","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\HomePage\\HomePageC\\index.js":"20","D:\\system-bank\\frontend\\bank-front\\src\\Components\\CardConfirm\\index.js":"21","D:\\system-bank\\frontend\\bank-front\\src\\Components\\CardBankAdmin\\index.js":"22","D:\\system-bank\\frontend\\bank-front\\src\\Components\\CardBankClient\\index.js":"23","D:\\system-bank\\frontend\\bank-front\\src\\Components\\CardBankClient\\styles.js":"24","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\HomePage\\HomePageC\\styles.js":"25","D:\\system-bank\\frontend\\bank-front\\src\\Components\\CardConfirm\\styles.js":"26","D:\\system-bank\\frontend\\bank-front\\src\\Components\\CardExtrato\\index.js":"27","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\HomePage\\styles.js":"28","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\Transfer\\style.js":"29","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\HomePageAdmin\\styles.js":"30","D:\\system-bank\\frontend\\bank-front\\src\\Components\\CardBankAdmin\\style.js":"31"},{"size":279,"mtime":1610576054115,"results":"32","hashOfConfig":"33"},{"size":1623,"mtime":1612017531054,"results":"34","hashOfConfig":"33"},{"size":3043,"mtime":1611877671086,"results":"35","hashOfConfig":"33"},{"size":1905,"mtime":1611877671089,"results":"36","hashOfConfig":"33"},{"size":992,"mtime":1612215629561,"results":"37","hashOfConfig":"33"},{"size":2115,"mtime":1612017531053,"results":"38","hashOfConfig":"33"},{"size":1623,"mtime":1612017746307,"results":"39","hashOfConfig":"33"},{"size":905,"mtime":1612215377194,"results":"40","hashOfConfig":"33"},{"size":2930,"mtime":1612215377213,"results":"41","hashOfConfig":"33"},{"size":1007,"mtime":1611877671088,"results":"42","hashOfConfig":"33"},{"size":2531,"mtime":1611877671074,"results":"43","hashOfConfig":"33"},{"size":544,"mtime":1612215377193,"results":"44","hashOfConfig":"33"},{"size":533,"mtime":1612215377203,"results":"45","hashOfConfig":"33"},{"size":1247,"mtime":1611877671086,"results":"46","hashOfConfig":"33"},{"size":908,"mtime":1611877671056,"results":"47","hashOfConfig":"33"},{"size":583,"mtime":1611877671076,"results":"48","hashOfConfig":"33"},{"size":777,"mtime":1610810081830,"results":"49","hashOfConfig":"33"},{"size":2800,"mtime":1612017531054,"results":"50","hashOfConfig":"33"},{"size":777,"mtime":1610809636794,"results":"51","hashOfConfig":"33"},{"size":2393,"mtime":1611877671055,"results":"52","hashOfConfig":"33"},{"size":758,"mtime":1611877671053,"results":"53","hashOfConfig":"33"},{"size":1111,"mtime":1612215377191,"results":"54","hashOfConfig":"33"},{"size":542,"mtime":1611877671052,"results":"55","hashOfConfig":"33"},{"size":591,"mtime":1610811130630,"results":"56","hashOfConfig":"33"},{"size":859,"mtime":1611877671055,"results":"57","hashOfConfig":"33"},{"size":392,"mtime":1611877671054,"results":"58","hashOfConfig":"33"},{"size":574,"mtime":1611877671054,"results":"59","hashOfConfig":"33"},{"size":323,"mtime":1612215377193,"results":"60","hashOfConfig":"33"},{"size":266,"mtime":1612215377213,"results":"61","hashOfConfig":"33"},{"size":365,"mtime":1612215377194,"results":"62","hashOfConfig":"33"},{"size":230,"mtime":1612215377192,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1o92gyy",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"D:\\system-bank\\frontend\\bank-front\\src\\index.js",[],["133","134"],"D:\\system-bank\\frontend\\bank-front\\src\\routes\\routes.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Pages\\RegisterPage\\index.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Pages\\TransferPix\\index.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Pages\\HomePage\\index.js",["135"],"D:\\system-bank\\frontend\\bank-front\\src\\Pages\\RegisterKeyPix\\index.js",["136","137","138","139"],"import React, { useEffect, useState } from 'react';\r\nimport * as S from './styles';\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport { createPix, registerKeyPix, getClient } from '../../Services/api';\r\n\r\n\r\nexport default function RegisterKeyPix() {\r\n    const {id, index,bank} = useParams();\r\n    const[keyPix, setKeyPix] = useState('');\r\n    const[keyPixx, setKeyPixx] = useState('');\r\n    return(\r\n        <S.Container>\r\n            <S.Inputs>\r\n                <span>Digite a chave PIX deseja cadastrar</span>\r\n                <input type=\"text\" placeholder=\"CHAVE\" value={keyPixx} onChange={keyPixx=>setKeyPixx(keyPixx.target.value)} />\r\n            </S.Inputs>\r\n            <button type=\"button\" onClick={()=>{\r\n                if(keyPixx === ''){\r\n                    return;\r\n                }\r\n                registerKeyPix(id, index, {keypix:keyPixx}).then(res=>{\r\n                    console.log(res.data)\r\n                    if(res.data != ''){\r\n                        alert(\"CHAVE CADASTRADA COM SUCESSO\");\r\n                    }else{\r\n                        alert(\"CHAVE NÃO CADASTRADA\");\r\n                    }\r\n                })\r\n            }}>CADASTRAR CHAVE</button>\r\n            \r\n            \r\n            <input value={keyPix} />\r\n            <button type='button' onClick={()=>{\r\n                createPix().then(res=>setKeyPix(res.data));\r\n            }}>GERAR CHAVE PIX ALEATORIA</button>\r\n            <button type=\"button\" onClick={()=>{\r\n                if(keyPix === ''){\r\n                    return;\r\n                }\r\n                registerKeyPix(id, index, {keypix:keyPix}).then(res=>{\r\n                    if(res.data != ''){\r\n                        alert(\"CHAVE CADASTRADA COM SUCESSO\");\r\n                    }else{\r\n                        alert(\"CHAVE NÃO CADASTRADA\");\r\n                    }\r\n                })\r\n                console.log(\"olá\")\r\n            }}>CADASTRAR CHAVE ALEATORIA</button>\r\n            <S.Links>\r\n                <Link to={`/homepage/${id}/${bank}`}><span>VOLTAR</span></Link>\r\n            </S.Links>\r\n        </S.Container>\r\n    )\r\n}","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\LoginPage\\index.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Pages\\HomePageClient\\index.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Pages\\Transfer\\index.js",["140","141","142","143","144","145","146"],"import React, { useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { transfer } from '../../Services/api';\r\nimport * as S from './style'\r\n\r\nexport default function Tranfer() {\r\n    const {id, index, bank} = useParams();\r\n    const[keyTrans, setKeyTrans] = useState('');\r\n    const[bankk, setBank] = useState('');\r\n    const[agency, setAgency] =useState('');\r\n    const[numberAccount, setNumberAccount] = useState('');\r\n    const[cpf, setCpf] = useState('');\r\n    const[value, setValue] = useState(0);\r\n    const[typeAccount, setTypeAccount] = useState('corrente');\r\n    return (\r\n        <S.Container>\r\n            <S.div>\r\n            <form>\r\n            <S.div>\r\n            <span>SENHA DE TRANSFERENCIA</span>\r\n            <input type=\"password\" value={keyTrans} onChange={key => setKeyTrans(key.target.value)}/>\r\n            </S.div>\r\n            <S.div>\r\n            <span>BANCO</span>\r\n            <input type=\"text\" value={bankk} onChange={bank => setBank(bank.target.value)}/>\r\n            </S.div>\r\n            <S.div>\r\n            <span>AGENCIA</span>\r\n            <input type=\"text\" value={agency} onChange={agency => setAgency(agency.target.value)}/>\r\n            </S.div>\r\n            <S.div>\r\n            <span>NUMERO DA CONTA</span>\r\n            <input type=\"text\" value={numberAccount} onChange={number => setNumberAccount(number.target.value)}/>\r\n            </S.div>\r\n            <S.div>\r\n            <span>CPF</span>\r\n            <input type=\"text\" value={cpf} onChange={cpf => setCpf(cpf.target.value)}/>\r\n            </S.div>\r\n            <select value={typeAccount} onChange={value => setTypeAccount((value.target.value))}>\r\n                    <option value={'corrente'}>CONTA CORRENTE</option>\r\n                    <option value={'poupanca'}>POUPANÇA</option>\r\n                    <option value={'salario'}>CONTA SALARIO</option>\r\n            </select>\r\n            <S.div>\r\n            <span>VALOR QUE DESEJA TRANFERIR</span>\r\n            </S.div>\r\n            <input type=\"number\" placeholder=\"R$\" value={value} onChange={value => setValue(value.target.value)} />\r\n            <button  type=\"button\" onClick={()=>{\r\n                transfer({\r\n                    agency,\r\n                    numberAccount,\r\n                    cpf,\r\n                    value,\r\n                    typeAccount,\r\n                    index,\r\n                    clientId:id,\r\n                    bank:bankk\r\n                }).then(res=>{\r\n                    if(res.data !== 0){\r\n                        alert(\"Transferencia feita com sucesso\");\r\n                    }else{\r\n                        alert(\"Tranferencia não concluida\");\r\n                    }\r\n                });\r\n            }}>TRANSFERIR</button>\r\n            <Link to={`/homepage/${id}/${bank}`}>VOLTAR</Link>\r\n        </form>\r\n        </S.div>\r\n            \r\n        </S.Container>\r\n        \r\n        \r\n    );\r\n}","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\Sacar\\index.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Pages\\RegisterBank\\index.js",["147","148"],"import React,{useEffect, useState} from 'react';\r\nimport * as S from './styles'\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport { createAccount, agency } from '../../Services/api';\r\n\r\nexport default function RegisterBank(){\r\n    const[clientType, setClientType] = useState(0);\r\n    const { id , bank } = useParams();\r\n    const[typeAccount, setTypeAccount] = useState('corrente');\r\n    const[balance, setBalance] = useState(0)\r\n    const getNumberBank = (bank) => {\r\n        if(bank === 'Bs2'){\r\n           return'218';\r\n        }else if(bank === 'Nubank'){\r\n           return '260';\r\n        }else if(bank === 'Inter'){\r\n           return '077';\r\n        }else if(bank === 'Bradesco'){\r\n           return '237';\r\n        }\r\n    }\r\n    return(\r\n        <S.Container>\r\n            <span>CADASTRO BANK</span>\r\n            <label>opções de conta</label>\r\n                <select value={typeAccount} onChange={value => setTypeAccount(value.target.value)}>\r\n                    <option value={'corrente'}>CONTA CORRENTE</option>\r\n                    <option value={'poupanca'}>POUPANÇA</option>\r\n                    <option value={'salario'}>CONTA SALARIO</option>\r\n                </select>\r\n            <label>TIPO DE CONTA</label>\r\n                <select value={clientType} onChange={e => setClientType(e.target.value)}>\r\n                    <option value={0} >Cliente</option>\r\n                    <option value={1} >Empregador</option>\r\n                </select>\r\n            <span>SALDO INICIAL</span>\r\n            <input onChange={balance=>setBalance(balance.target.value)} value={balance} placeholder='INFORME SEU SALDO'  type=\"Number\"/>\r\n            <button type=\"button\" onClick={()=>{\r\n                \r\n                createAccount(id,{\r\n                    typeAccount,\r\n                    balance,\r\n                    employer:clientType,\r\n                    banks:[\r\n                        {\r\n                            bankName:bank,\r\n                            numberBank:getNumberBank(bank)\r\n                        }\r\n                    ]\r\n                }).then(res =>{\r\n                    if(res.data === \"\"){\r\n                        alert(\"A senha de transferencia já existe ela deve ser unica\");\r\n                    }\r\n                });\r\n            }}>CADASTRAR</button>\r\n            <S.Links>\r\n                    <Link to={`/homepageclient/${id}`}>\r\n                        <span>VOLTAR</span>\r\n                    </Link>\r\n            </S.Links>\r\n        </S.Container>\r\n    )\r\n}","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\HomePageAdmin\\index.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Pages\\HomePageClient\\styles.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Pages\\RegisterPage\\styles.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Pages\\LoginPage\\Styles.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Pages\\RegisterBank\\styles.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Pages\\TransferPix\\styles.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Services\\api.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Pages\\RegisterKeyPix\\styles.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Pages\\HomePage\\HomePageC\\index.js",["149","150"],"import React, { useEffect, useState } from 'react';\r\nimport * as S from './styles'\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport { getClient } from '../../../Services/api';\r\nimport CardExtrato from '../../../Components/CardExtrato';\r\n\r\n\r\nexport default function HomePageC({balance, typeAccount,bank, index, id}){\r\n    const[client, setClient] = useState({})\r\n    const[showExtrato,setShowExtrato] = useState(false);\r\n    useEffect(()=>{\r\n        getClient(id).then(res=>setClient(res))\r\n    },[])\r\n    return(\r\n        <S.Container>\r\n            <S.Bank>\r\n                <span>\r\n                    {bank}\r\n                </span>\r\n            </S.Bank>\r\n                <span>{`Conta: ${typeAccount}`}</span>\r\n            <S.NameClient>\r\n                <span>\r\n                    {client.name} \r\n                </span>\r\n            </S.NameClient>\r\n            <span>\r\n                SALDO\r\n            </span>\r\n            <S.Saldo>\r\n                <span>\r\n                    R$ {balance}\r\n                </span>\r\n            </S.Saldo>\r\n            <S.Links>\r\n                    <Link onClick={()=>{\r\n                        if(typeAccount === \"salario\"){\r\n                            alert(\"CONTA SALARIO PODE APENAS SACAR\");\r\n                        }\r\n                    }} to={typeAccount !== \"salario\" ?`/transferpix/${id}/${index}/${bank}` : `/homepage/${id}/${bank}`}><span>TRANSFERIR VIA PIX</span></Link>\r\n            </S.Links>\r\n            <S.Links>\r\n                    <Link onClick={()=>{\r\n                        if(typeAccount === \"salario\"){\r\n                            alert(\"CONTA SALARIO PODE APENAS SACAR\");\r\n                        }\r\n                    }} to={typeAccount !== \"salario\" ? `/transfer/${id}/${index}/${bank}`:`/homepage/${id}/${bank}`}><span>TRANSFERIR</span></Link>\r\n            </S.Links>\r\n            <S.Links>\r\n                    <Link to={`/sacar/${id}/${index}/${bank}`}><span>SACAR</span></Link>\r\n            </S.Links>\r\n            <S.Links>\r\n                    <Link to={`/registerkeypix/${id}/${index}/${bank}`}><span>CADASTRAR PIX</span></Link>\r\n            </S.Links>\r\n            \r\n            <CardExtrato id={id} index={index} showExtrato={showExtrato} />\r\n            <button onClick={()=>{\r\n                setShowExtrato(!showExtrato);\r\n            }}>Gerar Extrato</button>\r\n        </S.Container>\r\n    )\r\n}","D:\\system-bank\\frontend\\bank-front\\src\\Components\\CardConfirm\\index.js",["151"],"import React from 'react';\r\nimport * as S from './styles';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function CardConfirm({nome, bank, value,typeAccount,numberAccount,agency, dateTransfer, cpf}){\r\n    return(\r\n        <S.Container>\r\n            <h3>Nome</h3>\r\n            <span>{nome}</span>\r\n            <h3>Banco</h3>\r\n            <span>{bank}</span>\r\n            <h3>Conta</h3>\r\n            <span>{typeAccount}</span>\r\n            <h3>Numero da conta</h3>\r\n            <span>{numberAccount}</span>\r\n            <h3>Agencia</h3>\r\n            <span>{agency}</span>\r\n            <h3>cpf</h3>\r\n            <span>{cpf}</span>\r\n            <h3>Data da tranferencia</h3>\r\n            <span>{dateTransfer}</span>\r\n        </S.Container>\r\n    )\r\n}","D:\\system-bank\\frontend\\bank-front\\src\\Components\\CardBankAdmin\\index.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Components\\CardBankClient\\index.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Components\\CardBankClient\\styles.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Pages\\HomePage\\HomePageC\\styles.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Components\\CardConfirm\\styles.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Components\\CardExtrato\\index.js",["152","153"],"import React, { useEffect, useState } from 'react';\r\nimport { getExtrato } from '../../Services/api';\r\n\r\nexport default function({showExtrato, id,index}) {\r\n    const[extrato, setExtrato] = useState([]);\r\n    useEffect(()=>{\r\n        if(showExtrato){\r\n            getExtrato(id,index).then(res=>setExtrato(res.data));\r\n        }else{\r\n            setExtrato([]);\r\n        }\r\n    },[showExtrato]);\r\n    return(\r\n        <div>        \r\n                {\r\n                    extrato.map(extrato =><h6>{extrato.informations}</h6> )\r\n                }\r\n        </div>\r\n    );\r\n}","D:\\system-bank\\frontend\\bank-front\\src\\Pages\\HomePage\\styles.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Pages\\Transfer\\style.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Pages\\HomePageAdmin\\styles.js",[],"D:\\system-bank\\frontend\\bank-front\\src\\Components\\CardBankAdmin\\style.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":18,"column":7,"nodeType":"160","endLine":18,"endColumn":9,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":26},{"ruleId":"162","severity":1,"message":"166","line":4,"column":37,"nodeType":"164","messageId":"165","endLine":4,"endColumn":46},{"ruleId":"167","severity":1,"message":"168","line":23,"column":33,"nodeType":"169","messageId":"170","endLine":23,"endColumn":35},{"ruleId":"167","severity":1,"message":"168","line":41,"column":33,"nodeType":"169","messageId":"170","endLine":41,"endColumn":35},{"ruleId":"171","severity":1,"message":"172","line":17,"column":13,"nodeType":"173","endLine":17,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":19,"column":13,"nodeType":"173","endLine":19,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":23,"column":13,"nodeType":"173","endLine":23,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":27,"column":13,"nodeType":"173","endLine":27,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":31,"column":13,"nodeType":"173","endLine":31,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":35,"column":13,"nodeType":"173","endLine":35,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":44,"column":13,"nodeType":"173","endLine":44,"endColumn":20},{"ruleId":"162","severity":1,"message":"163","line":1,"column":15,"nodeType":"164","messageId":"165","endLine":1,"endColumn":24},{"ruleId":"162","severity":1,"message":"174","line":4,"column":25,"nodeType":"164","messageId":"165","endLine":4,"endColumn":31},{"ruleId":"162","severity":1,"message":"175","line":3,"column":15,"nodeType":"164","messageId":"165","endLine":3,"endColumn":24},{"ruleId":"158","severity":1,"message":"159","line":13,"column":7,"nodeType":"160","endLine":13,"endColumn":9,"suggestions":"176"},{"ruleId":"162","severity":1,"message":"177","line":3,"column":9,"nodeType":"164","messageId":"165","endLine":3,"endColumn":13},{"ruleId":"178","severity":1,"message":"179","line":4,"column":1,"nodeType":"180","endLine":20,"endColumn":2},{"ruleId":"158","severity":1,"message":"181","line":12,"column":7,"nodeType":"160","endLine":12,"endColumn":20,"suggestions":"182"},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["185"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getClient' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component div must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'agency' is defined but never used.","'useParams' is defined but never used.",["186"],"'Link' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'id' and 'index'. Either include them or remove the dependency array.",["187"],"no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"188","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [id]",{"range":"193","text":"194"},{"range":"195","text":"194"},"Update the dependencies array to be: [id, index, showExtrato]",{"range":"196","text":"197"},[508,510],"[id]",[506,508],[381,394],"[id, index, showExtrato]"]